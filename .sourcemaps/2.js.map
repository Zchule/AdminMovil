{"version":3,"sources":["../../src/pages/map/map.module.ts","../../src/pages/map/map.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AAChB;AAUhC,IAAa,aAAa;IAA1B;IAA4B,CAAC;IAAD,oBAAC;AAAD,CAAC;AAAhB,aAAa;IARzB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,qDAAO;SACR;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,qDAAO,CAAC;SAClC;KACF,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZgB;AACqD;AAE1B;AAEV;AAW3D,IAAa,OAAO;IAOlB,iBACS,OAAsB,EACtB,SAAoB,EACpB,WAAwB,EACxB,WAAwB,EACvB,QAA2B;QAJ5B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACvB,aAAQ,GAAR,QAAQ,CAAmB;QATrC,SAAI,GAAQ,IAAI,CAAC;QAWf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,gCAAc,GAAd;QAAA,iBAoCC;QAnCC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC9B,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI;YACvB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAClC,IAAI,SAAS,GAAI,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YAEjC,0CAA0C;YAC1C,IAAI,MAAM,GAAgB,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YACzD,IAAI,QAAQ,GAAgB,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAE7D,uBAAuB;YACvB,IAAI,QAAQ,GAAG,EAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAC,CAAC;YAE/C,aAAa;YACb,KAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACrC,MAAM,EAAE,QAAQ;gBAChB,IAAI,EAAE,EAAE;aACT,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,EAAE,MAAM,EAAE;gBAClD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACjC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBAClC,QAAQ,EAAE,QAAQ;oBAClB,GAAG,EAAE,KAAI,CAAC,GAAG;oBACb,KAAK,EAAE,cAAc;iBACtB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC;IAEJ,CAAC;IAEH,cAAC;AAAD,CAAC;AAxDY,OAAO;IALnB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;OACG;KACxB,CAAC;yEAS+B;QACX,8EAAS;QACP,4EAAW;QACX,wEAAW;QACb,IAAiB;AA4CtC;SAxDY,OAAO,e","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MapPage } from './map';\n\n@NgModule({\n  declarations: [\n    MapPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MapPage),\n  ],\n})\nexport class MapPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map/map.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Loading, LoadingController} from 'ionic-angular';\n\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\n\nimport { DataService } from '../../providers/data.service';\n\nimport { FirebaseListObservable } from 'angularfire2/database';\n\ndeclare var google;\n\n@IonicPage()\n@Component({\n  selector: 'page-map',\n  templateUrl: 'map.html',\n})\nexport class MapPage {\n\n  map: any;\n  dato: any = null;\n  load: Loading;\n  datos: FirebaseListObservable<any>;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public geolocation: Geolocation,\n    public dataService: DataService,\n    private loadCtrl: LoadingController\n  ) {\n    this.dato = this.navParams.get('dato');\n    console.log(this.dato);\n  }\n\n  ionViewDidLoad() {\n    let load = this.loadCtrl.create({\n      content: 'Cargando...'\n    });\n    load.present();\n    this.datos = this.dataService.getAll();\n    this.datos.subscribe(data=>{\n      load.dismiss(); \n      let latitude = this.dato.latitude;\n      let longitude =  this.dato.longitude;\n      console.log(latitude, longitude);\n      \n      // create a new map by passing HTMLElement\n      let mapEle: HTMLElement = document.getElementById('map');\n      let panelEle: HTMLElement = document.getElementById('panel');\n      \n      // create LatLng object\n      let myLatLng = {lat: latitude, lng: longitude};\n    \n      // create map\n      this.map = new google.maps.Map(mapEle, {\n        center: myLatLng,\n        zoom: 12\n      });\n    \n      google.maps.event.addListenerOnce(this.map, 'idle', () => {\n        mapEle.classList.add('show-map');\n        let marker = new google.maps.Marker({\n          position: myLatLng,\n          map: this.map,\n          title: 'Hello World!'\n        });\n      }); \n      \n    })\n  \n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map/map.ts"],"sourceRoot":""}